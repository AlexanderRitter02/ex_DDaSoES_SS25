$date
    May 18, 2025  15:50:09
$end
$comment
	SimVision SST: d37fa0eb34ee6115b71f12b7fe0b461f
$end
$version
    TOOL:	xmsim(64)	22.09-s007
$end
$timescale
    1 fs
$end

$scope module alu_testbench $end
$var reg      16 !    a [15:0] $end
$var reg      16 "    b [15:0] $end
$var reg       2 #    instruction [1:0] $end
$var reg      16 $    alu_output [15:0] $end

$scope module ALU $end
$var wire     16 %    a [15:0] $end
$var wire      1 &    b [15] $end
$var wire      1 '    b [14] $end
$var wire      1 (    b [13] $end
$var wire      1 )    b [12] $end
$var wire      1 *    b [11] $end
$var wire      1 +    b [10] $end
$var wire      1 ,    b [9] $end
$var wire      1 -    b [8] $end
$var wire      1 .    b [7] $end
$var wire      1 /    b [6] $end
$var wire      1 0    b [5] $end
$var wire      1 1    b [4] $end
$var wire      1 2    b [3] $end
$var wire      1 3    b [2] $end
$var wire      1 4    b [1] $end
$var wire      1 5    b [0] $end
$var wire      2 6    instruction [1:0] $end
$var reg      16 7    alu_output [15:0] $end
$var reg      16 8    add [15:0] $end
$var reg      16 9    sub [15:0] $end
$var reg       1 :    enc_dec $end
$var wire     16 ;    cbc_result [15:0] $end

$scope module crypt_engine $end
$var parameter 32 <    n $end
$var parameter 32 =    m $end
$var wire      1 >    enc_dec  $end
$var wire     16 %    message [15:0] $end
$var wire      1 .    key [7] $end
$var wire      1 /    key [6] $end
$var wire      1 0    key [5] $end
$var wire      1 1    key [4] $end
$var wire      1 2    key [3] $end
$var wire      1 3    key [2] $end
$var wire      1 4    key [1] $end
$var wire      1 5    key [0] $end
$var reg      16 ?    out [15:0] $end

$scope begin genblk1 $end

$scope module chunk_first $end
$var parameter 32 @    n $end
$var wire      8 A    chunk [7:0] $end
$var wire      1 .    key [7] $end
$var wire      1 /    key [6] $end
$var wire      1 0    key [5] $end
$var wire      1 1    key [4] $end
$var wire      1 2    key [3] $end
$var wire      1 3    key [2] $end
$var wire      1 4    key [1] $end
$var wire      1 5    key [0] $end
$var reg       8 B    out [7:0] $end
$upscope $end

$upscope $end


$scope begin gen_chunk_xors[1] $end
$var parameter 32 C    chunk $end
$var reg       8 D    current_key [7:0] $end

$scope module chunk_after $end
$var parameter 32 E    n $end
$var wire      8 F    chunk [7:0] $end
$var wire      8 G    key [7:0] $end
$var reg       8 H    out [7:0] $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1 E
b1 C
b1 @
b10 =
b1 <
b10010111010 !
b101011100110 "
b0 #
b111110100000 $
b10010111010 %
0&
0'
0(
0)
1*
0+
1,
0-
1.
1/
10
01
02
13
14
05
b0 6
b111110100000 7
b111110100000 8
b1111100111010100 9
0:
b101100001011100 ;
0>
b101100001011100 ?
b10111010 A
b1011100 B
b1011100 D
b100 F
b1011100 G
b1011000 H
$end
#1000
b1001 !
b10 "
0*
0,
0.
0/
00
03
b1001 %
b1011 8
b111 9
b10111000 B
b1011 7
b1001 A
b0 F
b1011 $
b1011 B
b1011100 H
b101100010111000 ?
b10111000 D
b10111000 G
b101100010111000 ;
b10111000 H
b101110010111000 ?
b101110000001011 ?
b1011 D
b1011 G
b101110000001011 ;
b1011 H
b1011100000001011 ?
b1011100000001011 ;
b101100001011 ?
b101100001011 ;
#2000
b1 #
b1 6
b111 7
b111 $
#3000
b111111111 !
b1000110111 "
1,
10
11
13
15
b111111111 %
b10000110110 8
b1111111111001000 9
b111110 B
b1111111111001000 7
b11111111 A
b1 F
b1111111111001000 $
b11001000 B
b1010 H
b101100111110 ?
b111110 D
b111110 G
b101100111110 ;
b111111 H
b101000111110 ?
b101011001000 ?
b11001000 D
b11001000 G
b101011001000 ;
b11001001 H
b11111111001000 ?
b11111111001000 ;
b1100100111001000 ?
b1100100111001000 ;
#4000
b101101111 !
b101101111 "
0,
1-
1/
01
12
b101101111 %
b1011011110 8
b0 9
b10010000 B
b0 7
b1101111 A
b0 $
b0 B
b1100100110010000 ?
b10010000 D
b10010000 G
b1100100110010000 ;
b10010001 H
b1100100100000000 ?
b0 D
b0 G
b1100100100000000 ;
b1 H
b1001000100000000 ?
b1001000100000000 ;
b100000000 ?
b100000000 ;
#5000
b1111111111111110 !
b1111111111111111 "
1&
1'
1(
1)
1*
1+
1,
1.
11
b1111111111111110 %
b1111111111111101 8
b1111111111111111 9
b10010000 B
b1111111111111111 7
b11111110 A
b11111111 F
b1111111111111111 $
b1 B
b11111111 H
b110010000 ?
b10010000 D
b10010000 G
b110010000 ;
b1101111 H
b1111111110010000 ?
b1111111100000001 ?
b1 D
b1 G
b1111111100000001 ;
b11111110 H
b110111100000001 ?
b110111100000001 ;
b1111111000000001 ?
b1111111000000001 ;
#6000
b0 #
b1111110111101000 !
b1000011001 "
0&
0'
0(
0)
0*
0+
0-
0.
0/
00
03
04
b1111110111101000 %
b0 6
b1 8
b1111101111001111 9
b11100111 B
b1 7
b11101000 A
b11111101 F
b1 $
b11110001 B
b11111100 H
b1111111011100111 ?
b11100111 D
b11100111 G
b1111111011100111 ;
b11010 H
b1111110011100111 ?
b1111110011110001 ?
b11110001 D
b11110001 G
b1111110011110001 ;
b1100 H
b1101011110001 ?
b1101011110001 ;
b110011110001 ?
b110011110001 ;
#7000
b10 #
b11010010 !
b0 "
0,
01
02
05
b11010010 %
b10 6
b11010010 8
b11010010 9
b11101000 B
b110011110001 7
b11010010 A
b0 F
b110011110001 $
b11010010 B
b11110001 H
b110011101000 ?
b11101000 D
b11101000 G
b110011101000 ;
b11101000 H
b110011101000 7
b1111000111101000 ?
b1111000111010010 ?
b11010010 D
b11010010 G
b1111000111010010 ;
b11010010 H
b1111000111010010 7
b110011101000 $
b1110100011010010 ?
b1110100011010010 ;
b1110100011010010 7
b1111000111010010 $
b1101001011010010 ?
b1101001011010010 ;
b1101001011010010 7
b1110100011010010 $
b1101001011010010 $
#8000
b11 #
b1101001011010010 !
b1101001011010010 %
b11 6
b1101001011010010 8
b1101001011010010 9
1:
1>
b11010010 F
b0 H
b11010010 ?
b11010010 ;
b11010010 7
b11010010 $
#9000
b10 #
b1100010010111011 !
b10101001 "
1.
10
12
15
b1100010010111011 %
b10 6
b1111011 B
b1100010101100100 8
b1100010000010010 9
b10111011 D
0:
0>
b10111011 G
b10111011 A
b11000100 F
b11010010 D
b1111111 H
b10010 B
b1111011 ?
b1111011 D
b1111011 G
b1111011 ;
b10111111 H
b1111011 7
b10010 ?
b111111100010010 ?
b10010 D
b10010 G
b111111100010010 ;
b11010110 H
b111111100010010 7
b1111011 $
b1011111100010010 ?
b1011111100010010 ;
b1011111100010010 7
b111111100010010 $
b1101011000010010 ?
b1101011000010010 ;
b1101011000010010 7
b1011111100010010 $
b1101011000010010 $
#10000
b11 #
b1101011000010010 !
b1101011000010010 %
b11 6
b1101011010111011 8
b1101010101101001 9
1:
1>
b10010 A
b11010110 F
b10111011 B
b11000100 H
b1100010000010010 ?
b1100010010111011 ?
b1100010010111011 ;
b1100010010111011 7
b1100010010111011 $
#11000
